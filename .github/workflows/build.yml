name: Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 23
        uses: actions/setup-java@v4 
        with:
          java-version: 23
          distribution: 'temurin' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2         
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
 #       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yj12s_trino_0360783a-f4aa-4112-a7f0-c676e4f98a49 -Dsonar.projectName='trino'
        run: |
            mvn -B -T 2C org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=yj12s_trino_0360783a-f4aa-4112-a7f0-c676e4f98a49 \
            -Dsonar.projectName='trino'
#            -Dpmd.threads=0

#            mvn -B -T 2C org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
#            -Dsonar.inclusions=**/*.java -Dsonar.exclusions=trino-client/**,**/src/test/**,client/** \
#            -Dair.check.skip-all -DskipTests -Denforcer.fail=false -Denforcer.skip=true \
#            -Dsonar.projectKey=yj12s_trino_0360783a-f4aa-4112-a7f0-c676e4f98a49 \
#            -Dsonar.projectName='trino'
